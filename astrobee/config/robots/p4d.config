-- Copyright (c) 2017, United States Government, as represented by the
-- Administrator of the National Aeronautics and Space Administration.
--
-- All rights reserved.
--
-- The Astrobee platform is licensed under the Apache License, Version 2.0
-- (the "License"); you may not use this file except in compliance with the
-- License. You may obtain a copy of the License at
--
--     http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
-- WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
-- License for the specific language governing permissions and limitations
-- under the License.

robot_mlp_address = "10.42.0.32"
robot_llp_address = "10.42.0.31"

robot_i2c_bus = "/dev/i2c-1"

robot_imu_drdy_pin = 101

robot_geometry = {
-- Placeholder transforms, not accurate!
  hazcam_to_navcam_transform = transform(vec3(0.079356943, 0.00019413532, -0.0019157775), quat4(0.076822296, -0.009733734, 0.99698419, 0.0051110388)),
  scicam_to_hazcam_transform = transform(vec3(0.0070938664, 0.061024816, -0.11184277), quat4(0.065639737, -0.031237584, 0.99720414, -0.017307023)),

  perch_cam_transform      = transform(vec3(-0.17520466, 0.040140345, -0.049281679), quat4(0.027207383, -0.71130843, 0.013260087, 0.70222806)),
  haz_cam_transform        = transform(vec3(0.092136082, 0.041911327, -0.11237338), quat4(-0.51485943, 0.49197658, -0.47825571, 0.51395553)), -- placeholder, not valid!

  -- Earl's measurements:
  -- nav cam (0.1157 + 0.002,    -0.0422, -0.0825)
  -- dock cam (-0.1032 - 0.0025, -0.054, -0.0063)
  -- imu (0.014, 0.016, ???)

  -- body to nav cam
  nav_cam_transform        = transform(vec3(0.10092553, -0.035829837, -0.11337286), quat4(-0.48308168, -0.51481273, -0.51707214, -0.48397969)),
  dock_cam_transform       = transform(vec3(-0.15848363, -0.064524236, -0.039838535), quat4(0.51481214, -0.48239012, -0.48683339, 0.51503542)),
  imu_transform            = transform(vec3(0.014, 0.016, -0.0319625), quat4(0.0043601096, -0.0066617904, 0.75077957, 0.66050535))
};

robot_camera_calibrations = {
  nav_cam = {
    distortion_coeff = 0.998468,
    intrinsic_matrix = {
      611.05291, 0.0, 637.95864,
      0.0, 610.21304, 558.05073,
      0.0, 0.0, 1.0
    },
    gain=100,
    exposure=150
  },
  dock_cam = {
    distortion_coeff = 1.00745,
    intrinsic_matrix = {
      758.83954, 0.0, 567.41597,
      0.0, 758.3447, 529.51797,
      0.0, 0.0, 1.0
    },
    gain=50,
    exposure=150
  },
  perch_cam = {
    distortion_coeff = {-0.366735, 0.182027, 0.00218105, 0.0114682},
    intrinsic_matrix = {
      209.21199, 0.0, 94.688486,
      0.0, 207.62067, 84.04047,
      0.0, 0.0, 1.0
    },
    gain=100,
    exposure=150
  },
  haz_cam = {
    distortion_coeff = {-0.29405, -0.0597744, 0.00554234, 0.00463849},
    intrinsic_matrix = {
      217.12576, 0.0, 112.04125,
      0.0, 216.12197, 82.598679,
      0.0, 0.0, 1.0
    },
    gain=50,
    exposure=150
  },
-- Placeholder for sci_cam, not accurate!
  sci_cam = {
    distortion_coeff = {0.128628, -0.167456, 0.00213421, -0.00262211},
    intrinsic_matrix = {
      859.44015, 0.0, 754.24485,
      0.0, 849.35466, 487.7349,
      0.0, 0.0, 1.0
    },
    gain=50,
    exposure=150
  }
}

-- PMC bus ordering and i2c trims {stbd, port}
robot_pmc_i2c_addrs = {0x20, 0x21}
robot_stbd_nozzle_calibration = {
  {0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0}
}
robot_port_nozzle_calibration = {
  {0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0}
}

robot_flashlight_addr_front = 0x63
robot_flashlight_addr_aft = 0x60

robot_perch_cam_device = "0004-3608-0024-1107"
robot_haz_cam_device   = "0005-1203-0034-1013"

-- Location of the trackers in the body frame
robot_vive_extrinsics = {
  {
    -- port
    serial = "LHR-09BB6B22", pose = transform(
      vec3(0, -0.1397, -0.1397),
      quat4(1.0, 0.0, 0.0, 0.0))
  },{
    -- starboard
    serial = "LHR-09DF88FD", pose = transform(
      vec3(0,  0.1397, -0.1397),
      quat4(0.0, 1.0, 0.0, 0.0))
  }
}

agent_name = "P4D"

heartbeat_queue_size = 20

nodes_not_running = {}
