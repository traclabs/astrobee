# This will set up an Astrobee docker container using the non-NASA install instructions.
# You must set the docker context to be the repository root directory

FROM nvidia/opengl:1.0-glvnd-runtime-ubuntu18.04

# try to suppress certain warnings during apt-get calls
ARG DEBIAN_FRONTEND=noninteractive
RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections

# install of apt-utils suppresses bogus warnings later
RUN apt-get update \
  && apt-get install -y apt-utils 2>&1 | grep -v "debconf: delaying package configuration, since apt-utils is not installed" \
  && apt-get install -y \
    build-essential \
    git \
    lsb-release \
    sudo \
    wget \
  && rm -rf /var/lib/apt/lists/*

# suppress detached head warnings later
RUN git config --global advice.detachedHead false

# Install ROS Melodic----------------------------------------------------------------
COPY ./scripts/setup/*.sh /setup/freeflyer/

# this command is expected to have output on stderr, so redirect to suppress warning
RUN /setup/freeflyer/add_ros_repository.sh >/dev/null 2>&1

RUN apt-get update \
  && apt-get install -y \
  debhelper \
  libtinyxml-dev \
  && rm -rf /var/lib/apt/lists/*
RUN apt-get update \
  && apt-get install -y \
  ros-melodic-desktop \
  && rm -rf /var/lib/apt/lists/*

# Install OpenCV----------------------------------------------------------------
# Install depending packages
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    git \
    pkg-config \
    libgtk-3-dev \
    libavcodec-dev \
    libavformat-dev \
    libswscale-dev \
    libv4l-dev \
    libxvidcore-dev \
    libx264-dev \
    libjpeg-dev \
    libpng-dev \
    libtiff-dev \
    gfortran \
    openexr \
    libatlas-base-dev \
    python3-dev \
    python3-numpy \
    libtbb2 \
    libtbb-dev \
    libdc1394-22-dev \
  && rm -rf /var/lib/apt/lists/*

# Downloading OpenCV repo & switching to 3.3.1 branch,
#Building OpenCV
RUN mkdir /opencv_build && cd /opencv_build && \
    git clone https://github.com/opencv/opencv.git && \
    cd opencv && git checkout 3.3.1 && cd .. && \
    git clone https://github.com/opencv/opencv_contrib.git && \
    cd opencv_contrib && git checkout 3.3.1 && \
    cd /opencv_build/opencv && mkdir build && cd build && \
    cmake -D CMAKE_BUILD_TYPE=RELEASE \
      -D CMAKE_INSTALL_PREFIX=${install_path:-/usr/local} \
      -D INSTALL_C_EXAMPLES=ON \
      -D INSTALL_PYTHON_EXAMPLES=ON \
      -D OPENCV_GENERATE_PKGCONFIG=ON \
      -D OPENCV_EXTRA_MODULES_PATH=/opencv_build/opencv_contrib/modules \
      -D BUILD_EXAMPLES=ON \
      -D OPENCV_ENABLED_NONFREE=YES \
      -D ENABLE_PRECOMPILED_HEADERS=OFF .. && \
    make -j6
RUN cd /opencv_build/opencv/build  \
  && make install \
  && rm -rf /var/lib/apt/lists/*

# Install Freeflyer----------------------------------------------------------------
COPY ./scripts/setup/debians /setup/freeflyer/debians

RUN apt-get update \
  && /setup/freeflyer/install_luajit.sh \
  && /setup/freeflyer/debians/build_install_debians_18_04.sh \
  && rm -rf /var/lib/apt/lists/*

COPY ./scripts/setup/packages_*.lst /setup/freeflyer/
# note apt-get update is run within the following shell script
RUN /setup/freeflyer/install_desktop_18_04_packages.sh \
  && rm -rf /var/lib/apt/lists/*

COPY . /src/astrobee
RUN /src/astrobee/scripts/configure.sh -l -F -D -p /opt/astrobee -b /build/astrobee
RUN cd /build/astrobee && make -j4

COPY ./astrobee/resources /opt/astrobee/share/astrobee/resources

#Add new sudo user
ENV USERNAME astrobee
RUN useradd -m $USERNAME && \
        echo "$USERNAME:$USERNAME" | chpasswd && \
        usermod --shell /bin/bash $USERNAME && \
        usermod -aG sudo $USERNAME && \
        echo "$USERNAME ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers.d/$USERNAME && \
        chmod 0440 /etc/sudoers.d/$USERNAME && \
        # Replace 1000 with your user/group id
        usermod  --uid 1000 $USERNAME && \
        groupmod --gid 1000 $USERNAME

#Add the entrypoint for docker
RUN echo "#!/bin/bash\nset -e\n\nsource \"/opt/ros/kinetic/setup.bash\"\nsource \"/build/astrobee/devel/setup.bash\"\nexport ASTROBEE_CONFIG_DIR=\"/src/astrobee/astrobee/config\"\nexec \"\$@\"" > /freeflyer_init.sh && \
  chmod +x /freeflyer_init.sh && \
  rosdep init && \
  rosdep update 2>&1 | egrep -v 'as root|fix-permissions'